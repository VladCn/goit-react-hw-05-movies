{"version":3,"file":"static/js/193.e7579718.chunk.js","mappings":"wOAKMA,EAAUC,EAAAA,GAAAA,IAAH,6EAIPC,EAAYD,EAAAA,GAAAA,GAAH,kDAGTE,EAASF,EAAAA,GAAAA,GAAH,gGAKNG,EAAQH,EAAAA,GAAAA,GAAH,8CAGLI,EAAOJ,EAAAA,GAAAA,GAAH,oFA+EV,UA1EyB,WAAO,IAAD,EAGvBK,GAASC,EAAAA,EAAAA,MACf,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACMC,EAAWP,EAAOQ,QAElBC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,EAXN,oCAYPM,MAAK,SAAUC,GAEdV,EAAYU,EAASC,MACrBT,EAAeQ,EAASC,KAAKC,aAAaC,MAAM,KAAK,IACrDC,QAAQC,IAAIL,MAEbM,OAAM,SAAUC,GAEfH,QAAQC,IAAIE,QAEf,CAACd,IAQJ,OACE,4BACE,mBAAQe,QAxBG,kBAAMb,GAAU,IAwB3B,sBACA,UAACf,EAAD,YACE,gBACE6B,MAAM,QACNC,OAAO,QACPC,IAAG,UApCK,oCAoCL,OAAetB,EAASuB,aAC3BC,IAAK,YAEP,UAAC/B,EAAD,YACE,yBACE,kCAAQO,EAASyB,eAAjB,aAAoCvB,EAApC,UAEF,8CApBK,WACX,GAAIF,EAAS0B,aACX,OAA+B,GAAxB1B,EAAS0B,aAkBQC,GAApB,QACA,2BACE,sCACA,uBAAI3B,EAAS4B,eAEf,2BACE,oCACA,SAAClC,EAAD,iBACGM,QADH,IACGA,GADH,UACGA,EAAU6B,cADb,aACG,EAAkBC,KAAI,SAAAC,GAAK,OAC1B,SAACpC,EAAD,UAAuBoC,EAAMC,MAAjBD,EAAME,mBAM5B,oDAEA,UAACrC,EAAD,YACE,yBACE,SAAC,KAAD,CAAMsC,GAAE,kBAAarC,EAAOQ,QAApB,SAAR,sBAEF,yBACE,SAAC,KAAD,CAAM6B,GAAE,kBAAarC,EAAOQ,QAApB,YAAR,2BAGJ,SAAC,KAAD,S,6KC7FO8B,EAAc,SAAAC,GACzB,OAAOC,IAAAA,IAAA,gEACoDD,EADpD,4BAKIE,EAAiB,SAACF,EAAKG,GAClC,OAAOF,IAAAA,IAAA,4DACgDD,EADhD,kBAC6DG,EAD7D,gDAKI9B,EAAkB,SAACL,EAAUgC,GACxC,OAAOC,IAAAA,IAAA,6CACiCjC,EADjC,oBACqDgC,EADrD,4BAKII,EAAU,SAACC,EAAcL,GACpC,OAAOC,IAAAA,IAAA,6CACiCI,EADjC,4BACiEL,EADjE,4BAKIM,EAAS,SAACC,EAAaP,GAClC,OAAOC,IAAAA,IAAA,6CACiCM,EADjC,4BACgEP,EADhE","sources":["Pages/MovieDetailsPage.jsx","services/index.js"],"sourcesContent":["import { Link, useParams, Outlet, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { getMovieDetails } from '../services';\n\nconst DivCont = styled.div`\n  display: flex;\n  border-bottom: 1px solid black;\n`;\nconst Container = styled.ul`\n  list-style-type: none;\n`;\nconst Genres = styled.ul`\n  display: flex;\n  list-style-type: none;\n  padding-inline-start: 0;\n`;\nconst Genre = styled.li`\n  margin-right: 5px;\n`;\nconst Info = styled.ul`\n  border-bottom: 1px solid black;\n  padding-bottom: 15px;\n`;\n\nconst MovieDetailsPage = () => {\n  const API = '70fc5b973179caa818ae6622551a44d1';\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n  const params = useParams();\n  const [filmData, setFilmData] = useState([]);\n  const [releaseData, setReleaseData] = useState([]);\n  const paramsId = params.movieId;\n\n  const navigate = useNavigate();\n  const goBack = () => navigate(-1);\n\n  useEffect(() => {\n    getMovieDetails(paramsId, API)\n      .then(function (response) {\n        // handle success\n        setFilmData(response.data);\n        setReleaseData(response.data.release_date.split('-')[0]);\n        console.log(response);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n  }, [paramsId]);\n\n  const reit = () => {\n    if (filmData.vote_average) {\n      return filmData.vote_average * 10;\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={goBack}>Go back</button>\n      <DivCont>\n        <img\n          width=\"200px\"\n          height=\"300px\"\n          src={`${IMG_URL}${filmData.poster_path}`}\n          alt={'no img'}\n        />\n        <Container>\n          <li>\n            <h1>{`${filmData.original_title} (${releaseData})`}</h1>\n          </li>\n          <li>{`User Score: ${reit()}%`}</li>\n          <li>\n            <h2>Overview</h2>\n            <p>{filmData.overview}</p>\n          </li>\n          <li>\n            <h2>Genres</h2>\n            <Genres>\n              {filmData?.genres?.map(genre => (\n                <Genre key={genre.id}>{genre.name}</Genre>\n              ))}\n            </Genres>\n          </li>\n        </Container>\n      </DivCont>\n      <h3>Additional information</h3>\n\n      <Info>\n        <li>\n          <Link to={`/movies/${params.movieId}/cast`}>Casts</Link>\n        </li>\n        <li>\n          <Link to={`/movies/${params.movieId}/reviews`}>Reviews</Link>\n        </li>\n      </Info>\n      <Outlet />\n    </div>\n  );\n};\nexport default MovieDetailsPage;\n","import { default as axios } from 'axios';\n\nexport const getDayFilms = API => {\n  return axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API}&language=en-US&page=1`\n  );\n};\n\nexport const getSearchFilms = (API, query) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n};\n\nexport const getMovieDetails = (paramsId, API) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${paramsId}?api_key=${API}&language=en-US&page=1`\n  );\n};\n\nexport const getCast = (paramsCastId, API) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${paramsCastId}/credits?api_key=${API}&language=en-US&page=1`\n  );\n};\n\nexport const getRew = (paramsRewId, API) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${paramsRewId}/reviews?api_key=${API}&language=en-US&page=1`\n  );\n};\n"],"names":["DivCont","styled","Container","Genres","Genre","Info","params","useParams","useState","filmData","setFilmData","releaseData","setReleaseData","paramsId","movieId","navigate","useNavigate","useEffect","getMovieDetails","then","response","data","release_date","split","console","log","catch","error","onClick","width","height","src","poster_path","alt","original_title","vote_average","reit","overview","genres","map","genre","name","id","to","getDayFilms","API","axios","getSearchFilms","query","getCast","paramsCastId","getRew","paramsRewId"],"sourceRoot":""}