{"version":3,"file":"static/js/193.3ce86cac.chunk.js","mappings":"iPAKMA,EAAUC,EAAAA,GAAAA,IAAH,6EAIPC,EAAYD,EAAAA,GAAAA,GAAH,kDAGTE,EAASF,EAAAA,GAAAA,GAAH,gGAKNG,EAAQH,EAAAA,GAAAA,GAAH,8CAGLI,EAAOJ,EAAAA,GAAAA,GAAH,oFAkFV,UA7EyB,WAAO,IAAD,EAGvBK,GAASC,EAAAA,EAAAA,MACf,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACAC,QAAQC,IAAIR,EAAOS,SAEnB,IAAMC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACRC,IAAAA,IAAA,6CAE0Cb,EAAOS,QAFjD,oBAXU,mCAWV,2BAIGK,MAAK,SAAUC,GAEdX,EAAYW,EAASC,MACrBV,EAAeS,EAASC,KAAKC,aAAaC,MAAM,KAAK,IACrDX,QAAQC,IAAIO,MAEbI,OAAM,SAAUC,GAEfb,QAAQC,IAAIY,QAEf,CAACpB,EAAOS,UAQX,OACE,4BACE,mBAAQY,QA3BG,kBAAMX,GAAU,IA2B3B,sBACA,UAAChB,EAAD,YACE,gBACE4B,MAAM,QACNC,OAAO,QACPC,IAAG,UAvCK,oCAuCL,OAAerB,EAASsB,aAC3BC,IAAK,YAEP,UAAC9B,EAAD,YACE,yBACE,kCAAQO,EAASwB,eAAjB,aAAoCtB,EAApC,UAEF,8CApBK,WACX,GAAIF,EAASyB,aACX,OAA+B,GAAxBzB,EAASyB,aAkBQC,GAApB,QACA,2BACE,sCACA,uBAAI1B,EAAS2B,eAEf,2BACE,oCACA,SAACjC,EAAD,iBACGM,QADH,IACGA,GADH,UACGA,EAAU4B,cADb,aACG,EAAkBC,KAAI,SAAAC,GAAK,OAC1B,SAACnC,EAAD,UAAuBmC,EAAMC,MAAjBD,EAAME,mBAM5B,oDAEA,UAACpC,EAAD,YACE,yBACE,SAAC,KAAD,CAAMqC,GAAE,kBAAapC,EAAOS,QAApB,SAAR,sBAEF,yBACE,SAAC,KAAD,CAAM2B,GAAE,kBAAapC,EAAOS,QAApB,YAAR,2BAGJ,SAAC,KAAD","sources":["Pages/MovieDetailsPage.jsx"],"sourcesContent":["import { Link, useParams, Outlet, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { default as axios } from 'axios';\nimport styled from 'styled-components';\n\nconst DivCont = styled.div`\n  display: flex;\n  border-bottom: 1px solid black;\n`;\nconst Container = styled.ul`\n  list-style-type: none;\n`;\nconst Genres = styled.ul`\n  display: flex;\n  list-style-type: none;\n  padding-inline-start: 0;\n`;\nconst Genre = styled.li`\n  margin-right: 5px;\n`;\nconst Info = styled.ul`\n  border-bottom: 1px solid black;\n  padding-bottom: 15px;\n`;\n\nconst MovieDetailsPage = () => {\n  const API = '70fc5b973179caa818ae6622551a44d1';\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n  const params = useParams();\n  const [filmData, setFilmData] = useState([]);\n  const [releaseData, setReleaseData] = useState([]);\n  console.log(params.movieId);\n\n  const navigate = useNavigate();\n  const goBack = () => navigate(-1);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${params.movieId}?api_key=${API}&language=en-US&page=1`\n      )\n      .then(function (response) {\n        // handle success\n        setFilmData(response.data);\n        setReleaseData(response.data.release_date.split('-')[0]);\n        console.log(response);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n  }, [params.movieId]);\n\n  const reit = () => {\n    if (filmData.vote_average) {\n      return filmData.vote_average * 10;\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={goBack}>Go back</button>\n      <DivCont>\n        <img\n          width=\"200px\"\n          height=\"300px\"\n          src={`${IMG_URL}${filmData.poster_path}`}\n          alt={'no img'}\n        />\n        <Container>\n          <li>\n            <h1>{`${filmData.original_title} (${releaseData})`}</h1>\n          </li>\n          <li>{`User Score: ${reit()}%`}</li>\n          <li>\n            <h2>Overview</h2>\n            <p>{filmData.overview}</p>\n          </li>\n          <li>\n            <h2>Genres</h2>\n            <Genres>\n              {filmData?.genres?.map(genre => (\n                <Genre key={genre.id}>{genre.name}</Genre>\n              ))}\n            </Genres>\n          </li>\n        </Container>\n      </DivCont>\n      <h3>Additional information</h3>\n\n      <Info>\n        <li>\n          <Link to={`/movies/${params.movieId}/cast`}>Casts</Link>\n        </li>\n        <li>\n          <Link to={`/movies/${params.movieId}/reviews`}>Reviews</Link>\n        </li>\n      </Info>\n      <Outlet />\n    </div>\n  );\n};\nexport default MovieDetailsPage;\n"],"names":["DivCont","styled","Container","Genres","Genre","Info","params","useParams","useState","filmData","setFilmData","releaseData","setReleaseData","console","log","movieId","navigate","useNavigate","useEffect","axios","then","response","data","release_date","split","catch","error","onClick","width","height","src","poster_path","alt","original_title","vote_average","reit","overview","genres","map","genre","name","id","to"],"sourceRoot":""}