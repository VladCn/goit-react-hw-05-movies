{"version":3,"file":"static/js/227.d95d8087.chunk.js","mappings":"iMA+DA,UA1DmB,WAAO,IAAD,cACvB,GAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAGA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAaMC,GACC,OAALL,QAAK,IAALA,GAAA,UAAAA,EAAOM,YAAP,eAAaC,UAA4C,KAA5B,OAALP,QAAK,IAALA,GAAA,UAAAA,EAAOM,YAAP,mBAAaC,eAAb,eAAsBC,SAAgBV,EAkBhE,OAhBAW,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAAQP,EAAaQ,IAAI,SACzBD,IACFE,EAAAA,EAAAA,IArBQ,mCAqBYF,GACjBG,MAAK,SAAUC,GAEdb,EAASa,GACTC,QAAQC,IAAIF,MAEbG,OAAM,SAAUC,GAEfH,QAAQC,IAAIE,QAGjB,CAACf,KAGF,4BACE,kBAAMgB,SA5Be,SAAAC,GACvBA,EAAEC,iBACEvB,GACFM,EAAgB,CAAEM,MAAOZ,KAyBzB,WACE,uCACA,kBAAOwB,SAlCU,SAAAF,GACrBrB,EAAeqB,EAAEG,OAAOC,MAAMC,YAkC1B,2CAEF,0BACoC,KAA5B,OAALzB,QAAK,IAALA,GAAA,UAAAA,EAAOM,YAAP,mBAAaC,eAAb,eAAsBC,UAAtB,UACCR,EAAMM,YADP,iBACC,EAAYC,eADb,aACC,EAAqBmB,KAAI,SAAA1B,GAAK,OAC5B,yBACE,SAAC,KAAD,CAAM2B,GAAE,kBAAa3B,EAAM4B,IAA3B,SACG5B,EAAM6B,OAAS7B,EAAM8B,QAFjB9B,EAAM4B,QAMlBvB,IAAsB,8E,6KCxDlB0B,EAAc,SAAAC,GACzB,OAAOC,IAAAA,IAAA,gEACoDD,EADpD,4BAKIpB,EAAiB,SAACoB,EAAKtB,GAClC,OAAOuB,IAAAA,IAAA,4DACgDD,EADhD,kBAC6DtB,EAD7D,gDAKIwB,EAAkB,SAACC,EAAUH,GACxC,OAAOC,IAAAA,IAAA,6CACiCE,EADjC,oBACqDH,EADrD,4BAKII,EAAU,SAACC,EAAcL,GACpC,OAAOC,IAAAA,IAAA,6CACiCI,EADjC,4BACiEL,EADjE,4BAKIM,EAAS,SAACC,EAAaP,GAClC,OAAOC,IAAAA,IAAA,6CACiCM,EADjC,4BACgEP,EADhE","sources":["Pages/MoviesPage.jsx","services/index.js"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getSearchFilms } from '../services';\n\nconst MoviesPage = () => {\n  const [searchFilms, setSearchFilms] = useState('');\n  const [films, setFilms] = useState([]);\n  const API = '70fc5b973179caa818ae6622551a44d1';\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSetFilms = e => {\n    setSearchFilms(e.target.value.trim());\n  };\n\n  const handleSearchFilm = e => {\n    e.preventDefault();\n    if (searchFilms) {\n      setSearchParams({ query: searchFilms });\n    }\n  };\n\n  const isEmptyStateRender =\n    films?.data?.results && films?.data?.results?.length === 0 && searchFilms;\n\n  useEffect(() => {\n    let query = searchParams.get('query');\n    if (query) {\n      getSearchFilms(API, query)\n        .then(function (response) {\n          // handle success\n          setFilms(response);\n          console.log(response);\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        });\n    }\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form onSubmit={handleSearchFilm}>\n        <p>MoviesPage</p>\n        <input onChange={handleSetFilms} />\n        <button>search</button>\n      </form>\n      <ul>\n        {films?.data?.results?.length !== 0 &&\n          films.data?.results?.map(films => (\n            <li key={films.id}>\n              <Link to={`/movies/${films.id}`}>\n                {films.title || films.name}\n              </Link>\n            </li>\n          ))}\n        {isEmptyStateRender && <div>Ошибка 404</div>}\n      </ul>\n    </div>\n  );\n};\nexport default MoviesPage;\n","import { default as axios } from 'axios';\n\nexport const getDayFilms = API => {\n  return axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API}&language=en-US&page=1`\n  );\n};\n\nexport const getSearchFilms = (API, query) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n};\n\nexport const getMovieDetails = (paramsId, API) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${paramsId}?api_key=${API}&language=en-US&page=1`\n  );\n};\n\nexport const getCast = (paramsCastId, API) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${paramsCastId}/credits?api_key=${API}&language=en-US&page=1`\n  );\n};\n\nexport const getRew = (paramsRewId, API) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${paramsRewId}/reviews?api_key=${API}&language=en-US&page=1`\n  );\n};\n"],"names":["useState","searchFilms","setSearchFilms","films","setFilms","useSearchParams","searchParams","setSearchParams","isEmptyStateRender","data","results","length","useEffect","query","get","getSearchFilms","then","response","console","log","catch","error","onSubmit","e","preventDefault","onChange","target","value","trim","map","to","id","title","name","getDayFilms","API","axios","getMovieDetails","paramsId","getCast","paramsCastId","getRew","paramsRewId"],"sourceRoot":""}